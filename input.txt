values
{
	input food 8;
	input service 3 ;
	output tip 0 0 30 1;
}

memberships
{
	rancid triangle -5 0 5;
	delicious triangle 5 10 15;


	excellent triangle 5 10 15;
	good triangle 0 5 10;
	poor triangle 0 2 4;

	cheap triangle 0 2 10;
	average triangle 10 15 20;
	generous triangle 20 25 30;
}
operators
{
	And AndMult;
	Or OrMax;
	Then ThenMult;
	Agg AggPlus;
	DefuzzMandani CogDefuzz;
	DefuzzSugeno SugDefuzz;
	Not NotMinus1;
}

MamdaniRules
{
	food is delicious  and service is excellent then tip is generous;
	food is delicious  and service is good then tip is generous;
	food is delicious  and service is poor then tip is average;
	food is rancid and service is excellent then tip is average;
	food is rancid and service is good then tip is cheap;
	food is rancid and service is poor then tip is cheap;
	not(food is excellent  and service is good) then tip is generous;
	food is rancid or service is poor then tip is cheap ;
}

SugenoRules
{
	food is rancid or service is poor then 12 food 56 service;
}
